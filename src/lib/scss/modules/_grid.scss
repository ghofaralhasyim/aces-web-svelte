@use 'sass:math';

// Config

$GRID_COUNT: 12 !default;
$GRID_MEDIUM: 48 * 1em !default;
$GRID_LARGE: 64 * 1em !default;
$GRID_XL: 75 * 1em !default;

@function gridSize($size) {
	@return math.div($size, $GRID_COUNT) * 100%;
}

// Style

%grid_clearfix:after {
	display: table;
	clear: both;
	content: '';
}

.grid {
	box-sizing: border-box;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	width: 100%;
}

.grid_column {
	width: 100%;
	min-height: 1px;
	box-sizing: border-box;
}

@for $i from 1 through $GRID_COUNT {
	.grid_column[data-col*='s#{$i}'] {
		width: gridSize($i);
	}

	.grid_column[offset*='s#{$i}'] {
		margin-left: gridSize($i);
	}
}

@media screen and (min-width: #{$GRID_MEDIUM} ) {
	.grid_column[data-col*='m'] {
		margin-left: 0;
	}

	@for $i from 1 through $GRID_COUNT {
		.grid_column[data-col*='m#{$i}'] {
			width: gridSize($i);
		}

		.grid_column[offset*='m#{$i}'] {
			margin-left: gridSize($i);
		}
	}
}

@media screen and (min-width: #{$GRID_LARGE}) {
	.grid_column[data-col*='l'] {
		margin-left: 0;
	}

	@for $i from 1 through $GRID_COUNT {
		.grid_column[data-col*='l#{$i}'] {
			width: gridSize($i);
		}

		.grid_column[offset*='l#{$i}'] {
			margin-left: gridSize($i);
		}
	}
}

@media screen and (min-width: #{$GRID_XL}) {
	.grid_column[data-col*='x'] {
		margin-left: 0;
	}

	@for $i from 1 through $GRID_COUNT {
		.grid_column[data-col*='x#{$i}'] {
			width: gridSize($i);
		}

		.grid_column[offset*='x#{$i}'] {
			margin-left: gridSize($i);
		}
	}
}
